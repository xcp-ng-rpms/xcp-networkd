diff --git c/lib/network_utils.ml w/lib/network_utils.ml
index 17ff799e..68c667a1 100644
--- c/lib/network_utils.ml
+++ w/lib/network_utils.ml
@@ -919,7 +919,13 @@ end = struct
         []
       )
     in
-    let request = minimal @ set_gateway @ set_dns in
+    let ipv6_fields =
+      if ipv6 then
+        ["dhcp6.client-id"; "dhcp6.domain-search"; "dhcp6.name-servers"]
+      else
+        []
+    in
+    let request = List.flatten [minimal; set_gateway; set_dns; ipv6_fields] in
     Printf.sprintf "interface \"%s\" {\n  send %s;\n  request %s;\n}\n"
       interface send
       (String.concat ", " request)
diff --git c/networkd/network_server.ml w/networkd/network_server.ml
index f190d624..afb0ef79 100644
--- c/networkd/network_server.ml
+++ w/networkd/network_server.ml
@@ -394,7 +394,18 @@ module Interface = struct
               Sysctl.set_ipv6_autoconf name false ;
               Ip.flush_ip_addr ~ipv6:true name ;
               Ip.set_ipv6_link_local_addr name ;
-              ignore (Dhclient.ensure_running ~ipv6:true name [])
+              let gateway =
+                Option.fold ~none:[]
+                  ~some:(fun n -> [`gateway n])
+                  !config.gateway_interface
+              in
+              let dns =
+                Option.fold ~none:[]
+                  ~some:(fun n -> [`dns n])
+                  !config.dns_interface
+              in
+              let options = gateway @ dns in
+              ignore (Dhclient.ensure_running ~ipv6:true name options)
           | Autoconf6 ->
               if Dhclient.is_running ~ipv6:true name then
                 ignore (Dhclient.stop ~ipv6:true name) ;
